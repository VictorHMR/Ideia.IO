@page "/Projetos/{Action:alpha}/{IdProjeto:int?}"
@model Ideia.IO.Pages.Projetos.GerenciarProjetosModel
@{
    bool readOnly = Convert.ToBoolean(ViewData["IsReadOnly"]);
    string Action = ViewData["Action"]?.ToString() ?? "Create";
}

<div class="text-center row main-view-projeto">
    <div id="MensagemContainer">

    @if (TempData["Fail"] != null)
    {
        <div class="alert alert-danger">@TempData["Fail"]</div>
    }
    </div>

    <div class="col-md-6">
        @if (Action == "Create")
        {
            <div id="previewImagens">
                <div class="previewPlaceholder" onclick="document.getElementById('inputImagens').click()">
                    <button class="btn btn-primario" style="padding: 10px 5px">
                        <img src="@Url.Content("~/svg/image-add.svg")"/>
                    </button>
                </div>
            </div>
            <input type="file" id="inputImagens" onchange="carregarImagens(this)" required style="display:none;" />
            <div id="previewImageGallery">
                <div class="previewPlaceholder2" id="previewPlaceholder2" onclick="document.getElementById('inputImagens').click()">
                    <button class="btn btn-primario" style="padding: 10px 5px">
                        <img src="@Url.Content("~/svg/image-add.svg")" />
                    </button>
                </div>
            </div>
            
        }
        else if (Action == "Edit")
        {
            @if (Model.ImagemProjeto != null && Model.ImagemProjeto.Count > 0)
            {

                <div id="previewImagens">
                    @if (!readOnly)
                    {
                        <form id="deleteForm" method="post" asp-page-handler="DeleteImage" class="imageContainer">
                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.ImagemProjeto[0].Imagem ?? new byte[0])" alt="Imagem do Projeto" />
                            <input type="hidden" name="IdImagem" id="imageId" value="@Model.ImagemProjeto[0].Id" />
                            <button type="submit" class="img-lixeira">
                                <img style="width:100%;height:100%;min-height:0;" src="@Url.Content("~/svg/delete-fill.svg")" />
                            </button>
                        </form>
                    }
                    else
                    {
                        <div id="Images" method="post" asp-page-handler="DeleteImage" class="imageContainer">
                            <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.ImagemProjeto[0].Imagem ?? new byte[0])" alt="Imagem do Projeto" />
                        </div>
                    }
                </div>
                <div id="previewImageGallery">

                    @for (int i = 1; i < Model.ImagemProjeto.Count(); i++)
                    {
                        var imagem = Model.ImagemProjeto[i];
                        @if (!readOnly)
                        {
                            <form id="deleteForm" method="post" asp-page-handler="DeleteImage" class="imageContainer">
                                <img src="data:image/jpeg;base64,@Convert.ToBase64String(imagem.Imagem)" alt="Imagem do Projeto" />
                                <input type="hidden" name="IdImagem" id="imageId" value="@imagem.Id" />
                                <button type="submit" class="btn btn-vermelho img-lixeira">
                                    <img style="width:100%;height:100%;min-height:0;" src="@Url.Content("~/svg/delete-fill.svg")" />
                                </button>
                            </form>
                        }
                        else
                        {
                            <div id="Images" method="post" asp-page-handler="DeleteImage" class="imageContainer">
                                <img src="data:image/jpeg;base64,@Convert.ToBase64String(imagem.Imagem)" alt="Imagem do Projeto" />
                            </div>
                        }
                    }

                    @if (Model.ImagemProjeto.Count() < 5 && !readOnly)
                    {
                        <div class="previewPlaceholder2" id="previewPlaceholder2" onclick="document.getElementById('inputImagensEdit').click()">
                            <button class="btn btn-primario" style="padding: 10px 5px;display">
                                <img src="@Url.Content("~/svg/image-add.svg")" />
                            </button>
                        </div>

                        <form id="addImageForm" method="post" asp-page-handler="AddImage" enctype="multipart/form-data" style="display:none;">
                            <input type="hidden" name="IdProjeto" id="projetoId" value="@Model.Projeto.Id" />
                            <input name="ImagemProjetofrm" id="inputImagensEdit" type="file" multiple onchange="document.getElementById('addImageForm').submit()" />
                        </form>
                    }
                </div>
            }
            else
            {
                <p>Nenhuma imagem disponível para este projeto.</p>
            }            
        }
    </div>
    <div class="col-md-6">
        <form method="post" asp-action="../Privacy" enctype="multipart/form-data" onsubmit="return validarEnvio();">
            <div class="form-floating input-container">
                <input class="form-control" id="frmTitulo" asp-for="Projeto!.Titulo" name="Titulo" type="text" required disabled="@readOnly" />
                <label for="frmTitulo">Titulo</label>
            </div>
            <div class="form-floating input-container">
                <textarea asp-for="Projeto!.Descricao" name="Descricao" id="frmDescricao" class="form-control" required disabled="@readOnly" style="background-color: #123252;border-color: #123252;color: white;height:100px;resize:none"></textarea>
                <label for="frmDescricao">Descrição</label>
            </div>
            <div class="input-50-container">
                <div class="form-floating" style="margin:0">
                    <input asp-for="Projeto!.Meta" name="Meta" type="number" id="frmMeta" class="form-control" required disabled="@readOnly" />
                    <label for="frmMeta">Meta</label>
                </div>
                <div class="form-floating" style="margin:0">
                    <input asp-for="Projeto!.DtLimite" name="DtLimite" type="date" id="frmDtLimite" class="form-control"  required disabled="@readOnly" />
                    <label for="frmDtLimite">Data Limite</label>
                </div>
            </div>
            <div class="input-button-container" style="display:flex;justify-content:center;">
                <a class="btn btn-voltar">
                    <img style="width:20px;margin-right:10px;" src="@Url.Content("~/svg/arrow-back.svg")" />
                    Voltar
                </a>
                @if (Action == "Create")
                {
                    <input type="file" id="imagensSubmit" asp-for="ImagemsUpload" style="display:none" />
                    <button type="submit" class="btn btn-verde">
                        <img style="width:20px;margin-right:10px;" src="@Url.Content("~/svg/notepad-add.svg")" />
                        Criar
                    </button>
                }
                else if (Action == "Edit")
                {
                    <button asp-page-handler="Update" type="submit" class="btn btn-verde">
                        <img style="width:20px;margin-right:10px;" src="@Url.Content("~/svg/notepad-edit.svg")" />
                        Salvar
                    </button>
                }
            </div>

        </form>
    </div>



</div>
<script>
    var imagensSelecionadas = [];
    var qntImg = 0;

    function carregarImagens(input) {
        if (imagensSelecionadas.length == 5){
            document.getElementById('MensagemContainer').innerHTML = '<div class="alert alert-danger">Quantidade limite de imagens atingido!</div>'
        }
        else{
            var container = document.getElementById('previewImagens');
            // Adiciona as novas imagens ao array imagensSelecionadas
            for (let i = 0; i < input.files.length; i++) {
                let file = input.files[i];
                imagensSelecionadas.push(file); // Adiciona a imagem à lista de arquivos

                // Cria o preview da imagem
                let reader = new FileReader();
                reader.onload = function (e) {
                    var imgPreview = document.createElement("div");
                    imgPreview.className = "imageContainer"
                    imgPreview.setAttribute("data-index", imagensSelecionadas.length - 1); // Índice baseado no array

                    imgPreview.innerHTML = `
                            <img src="${e.target.result}" />
                            <button class="img-lixeira" type="button" onclick="removerImagem(${imagensSelecionadas.length - 1})">
                                <img style="width:100%;height:100%;min-height:0;" src="@Url.Content("~/svg/delete-fill.svg")" />
                             </button>`;
                    if (imagensSelecionadas.length === 1) {
                        container.innerHTML = '';
                        container.append(imgPreview);
                    }
                    else
                        document.getElementById('previewImageGallery').appendChild(imgPreview);

                    var gallery = document.getElementById('previewImageGallery');
                    var atual = document.getElementById('previewPlaceholder2');
                    if (atual !== null)
                        gallery.removeChild(atual);
                    if (imagensSelecionadas.length < 5){
                        
                        var inputNextImg = document.createElement("div");
                        inputNextImg.className = "previewPlaceholder2";
                        inputNextImg.id = "previewPlaceholder2";
                        inputNextImg.addEventListener('click', () => {
                            document.getElementById('inputImagens').click();
                        }); 
                        inputNextImg.innerHTML = `
                                        <button class="btn btn-primario" style="padding: 10px 5px">
                                            <img src="@Url.Content("~/svg/image-add.svg")"/>
                                        </button>`;
                        gallery.appendChild(inputNextImg);
                    }
                };
                reader.readAsDataURL(file);
            }

            atualizarImagensSubmit(); 
        }
    }

    function atualizarImagensSubmit() {
        // Cria um novo DataTransfer
        const dataTransfer = new DataTransfer();
        imagensSelecionadas.forEach(file => dataTransfer.items.add(file));

        // Atualiza o campo escondido
        document.getElementById('imagensSubmit').files = dataTransfer.files;

        document.getElementById('inputImagens').value = '';
    }

    function removerImagem(index) {
        if (imagensSelecionadas.length <= 1) {
            document.getElementById('MensagemContainer').innerHTML = '<div class="alert alert-danger">Deve conter ao menos uma imagem!</div>'
        }
        else {
            imagensSelecionadas.splice(index, 1); // Remove a imagem do array

            // Atualiza a visualização
            var container = document.getElementById('previewImagens');
            container.innerHTML = ''; // Limpa o preview

            document.getElementById('previewImageGallery').innerHTML = '';

            // Recria o preview de acordo com as imagens restantes
            imagensSelecionadas.forEach((file, i) => {
                let reader = new FileReader();
                reader.onload = function (e) {
                    var imgPreview = document.createElement("div");
                    imgPreview.className = "imageContainer"
                    imgPreview.setAttribute("data-index", imagensSelecionadas.length - 1); // Índice baseado no array

                    imgPreview.innerHTML = `
                            <img src="${e.target.result}" />
                            <button class="img-lixeira" type="button" onclick="removerImagem(${i})">
                                <img style="width:100%;height:100%;min-height:0;" src="@Url.Content("~/svg/delete-fill.svg")" />
                            </button>`;
                    if(i === 0)
                        container.appendChild(imgPreview);
                    else
                        document.getElementById('previewImageGallery').appendChild(imgPreview);

                    var gallery = document.getElementById('previewImageGallery');
                    var atual = document.getElementById('previewPlaceholder2');
                    if (atual !== null)
                        gallery.removeChild(atual);
                    if (imagensSelecionadas.length < 5) {

                        var inputNextImg = document.createElement("div");
                        inputNextImg.className = "previewPlaceholder2";
                        inputNextImg.id = "previewPlaceholder2";
                        inputNextImg.addEventListener('click', () => {
                            document.getElementById('inputImagens').click();
                        });
                        inputNextImg.innerHTML = `
                                            <button class="btn btn-primario" style="padding: 10px 5px">
                                                <img src="@Url.Content("~/svg/image-add.svg")"/> 
                                            </button>`;
                        gallery.appendChild(inputNextImg);
                    }
                };
                reader.readAsDataURL(file);
            });

            atualizarImagensSubmit(); // Atualiza o campo escondido com a nova lista de arquivos

        }
    }



</script>


